[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "bitfinex-api-py-postonly-wrapper"
version = "1.0.0"
description = "Python wrapper for bitfinex-api-py that enforces POST_ONLY on limit orders for safe market-making"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "0xferit", email = "ferit@cryptolab.net"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.13"
dependencies = [
    "bitfinex-api-py @ git+https://github.com/0xferit/bitfinex-api-py.git@heartbeat"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.12.0",
    "mypy>=1.17.0",
]

[project.urls]
Homepage = "https://github.com/0xferit/bitfinex-api-py-postonly-wrapper"
Repository = "https://github.com/0xferit/bitfinex-api-py-postonly-wrapper"
Issues = "https://github.com/0xferit/bitfinex-api-py-postonly-wrapper/issues"

[tool.setuptools.packages.find]
include = ["bfx_postonly*"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "B010",  # Allow setattr for dynamic method assignment
]

[tool.ruff.lint.isort]
known-first-party = ["bfx_postonly"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "bfxapi"
ignore_missing_imports = true

[tool.pytest.ini_options]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
